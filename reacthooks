10/02/2025
React Hooks:
--introduced on react 16.8 version
--to manage state and life cycle features in functional components
State:
--is an essential part in react because it allows components to be dynamic,interactive and cappable of responding to user imput or 
change overtime
1)useState Hook:
--allows us to add state to functional components
Syntax:
const [state,setState]=useState(initial value)
state:This is current state
setState:This is a function to update the state
initial value:The value you want to set as the initial value


import React, { useState } from "react";

//counter component

const Counter=()=>{
  const[count,SetCount]=useState(0);
  //current state =count
  //funtion to update state=setCount
  //use state() to initialize the state =0;
  return(
    <div>
      <h1>{count}</h1>
      <button onClick={() =>SetCount(count+1)}>Increment</button>
      <button onClick={() =>SetCount(count-1)}>Decrement</button>

    </div>
  );
};

export default Counter;

ex:2
import React, { useState } from "react";

//counter component

const ThemeToggler=()=>{
  const [theme,setTheme] = useState('light')

  const toggleTheme = () =>{
    setTheme(prevTheme=>(prevTheme == 'light' ? 'dark' : 'light'))
  }

  return(
    <div style={{backgroundColor:theme=='light'?'white':'black' , color:theme=='light'? 'black':'white' ,textAlign:'center'}}>
      <h1>The Current theme is {theme}</h1>
      <button onClick={toggleTheme}>toggleTheme</button>
    </div>
  )

}
export default ThemeToggler;

